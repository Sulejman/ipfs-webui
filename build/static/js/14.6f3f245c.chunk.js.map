{"version":3,"sources":["components/shell/Shell.js","components/about-ipfs/AboutIpfs.js","welcome/WelcomePage.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Shell","_ref","title","children","a","createElement","className","react_i18next__WEBPACK_IMPORTED_MODULE_1__","_box_Box__WEBPACK_IMPORTED_MODULE_2__","withTranslation","t","i18nKey","target","rel","href","ConnectionStatus","_ref2","connected","sameOrigin","react__WEBPACK_IMPORTED_MODULE_7___default","react_i18next__WEBPACK_IMPORTED_MODULE_10__","defaultDomains","origin","window","location","addOrigin","indexOf","_components_shell_Shell_js__WEBPACK_IMPORTED_MODULE_14__","concat","join","ApiAddressForm","props","_this","Object","_Users_sule_Documents_GitHub_ipfs_webui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_Users_sule_Documents_GitHub_ipfs_webui_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_sule_Documents_GitHub_ipfs_webui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","onChange","event","val","value","setState","onKeyPress","key","onSubmit","_ref3","_Users_sule_Documents_GitHub_ipfs_webui_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_sule_Documents_GitHub_ipfs_webui_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","next","preventDefault","updateAddress","state","stop","_x","apply","arguments","defaultValue","htmlFor","id","type","_components_button_Button__WEBPACK_IMPORTED_MODULE_12__","React","Component","connect","doUpdateIpfsApiAddress","apiUrl","ipfsInitFailed","ipfsConnected","ipfsReady","ipfsApiAddress","_loader_ComponentLoader_js__WEBPACK_IMPORTED_MODULE_15__","pastDelay","isSameOrigin","react_helmet__WEBPACK_IMPORTED_MODULE_8__","_components_box_Box__WEBPACK_IMPORTED_MODULE_11__","style","maxWidth","_components_about_ipfs_AboutIpfs__WEBPACK_IMPORTED_MODULE_13__"],"mappings":"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","file":"static/js/14.6f3f245c.chunk.js","sourcesContent":["import React from 'react'\n\nconst Shell = ({\n  title = 'Shell',\n  children\n}) => {\n  return (\n    <div className='mw6 br1 overflow-hidden'>\n      <div className='f7 mb0 sans-serif ttu tracked charcoal pv1 pl2 bg-black-20'>Shell</div>\n      <div className='bg-black-70 snow pa2 f7 lh-copy monospace nowrap overflow-x-auto'>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default Shell\n","import React from 'react'\nimport { withTranslation, Trans } from 'react-i18next'\nimport Box from '../box/Box'\n\nexport const AboutIpfs = ({ t }) => {\n  return (\n    <Box>\n      <h1 className='mt0 mb3 montserrat fw4 f4 charcoal'>{t('aboutIpfs.header')}</h1>\n      <Trans i18nKey='aboutIpfs.paragraph1'>\n        <p className='mt0'><strong>IPFS is a protocol</strong> that defines a content-addressed file system, coordinates content delivery and combines ideas from Kademlia, BitTorrent, Git and more.</p>\n      </Trans>\n      <Trans i18nKey='aboutIpfs.paragraph2'>\n        <p><strong>IPFS is a filesystem.</strong> It has directories and files and mountable filesystem via FUSE.</p>\n      </Trans>\n      <Trans i18nKey='aboutIpfs.paragraph3'>\n        <p><strong>IPFS is a web.</strong> iles are accessible via HTTP gateways like <code className='f7'>https://ipfs.io</code>. Browsers <a className='link blue' target='_blank' rel='noopener noreferrer' href='https://github.com/ipfs-shipyard/ipfs-companion#release-channel'>can be extended</a> to use the <code className='f7'>ipfs://</code> scheme directly, and hash-addressed content guarantees authenticity</p>\n      </Trans>\n      <Trans i18nKey='aboutIpfs.paragraph4'>\n        <p><strong>IPFS is p2p.</strong> It supports worldwide peer-to-peer file transfers with a completely decentralized architecture and no central point of failure.</p>\n      </Trans>\n      <Trans i18nKey='aboutIpfs.paragraph5'>\n        <p><strong>IPFS is a CDN.</strong> Add a file to your local repository, and it's now available to the world with cache-friendly content-hash addressing and bittorrent-like bandwidth distribution.</p>\n      </Trans>\n    </Box>\n  )\n}\n\nexport default withTranslation('welcome')(AboutIpfs)\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { connect } from 'redux-bundler-react'\nimport { withTranslation, Trans } from 'react-i18next'\nimport Box from '../components/box/Box'\nimport Button from '../components/button/Button'\nimport AboutIpfs from '../components/about-ipfs/AboutIpfs'\nimport Shell from '../components/shell/Shell.js'\nimport ComponentLoader from '../loader/ComponentLoader.js'\n\nconst WelcomePage = ({ t, doUpdateIpfsApiAddress, apiUrl, ipfsInitFailed, ipfsConnected, ipfsReady, ipfsApiAddress }) => {\n  if (!ipfsInitFailed && !ipfsReady) {\n    return <ComponentLoader pastDelay />\n  }\n\n  const isSameOrigin = window.location.origin === apiUrl\n\n  return (\n    <div>\n      <Helmet>\n        <title>{t('title')}</title>\n      </Helmet>\n      <div className='flex'>\n        <div className='flex-auto pr3 lh-copy charcoal'>\n          <Box>\n            <ConnectionStatus connected={ipfsConnected} sameOrigin={isSameOrigin} t={t} />\n            <h1 className='montserrat fw2 navy mb0 mt5 f3 yellow'>{t('configureApiPort.header')}</h1>\n            <Trans i18nKey='configureApiPort.paragraph1'>\n              <p>If your IPFS node is configured with a <a className='link blue' href='https://github.com/ipfs/go-ipfs/blob/master/docs/config.md#addresses' target='_blank' rel='noopener noreferrer'>custom API address</a>, please set it here</p>\n            </Trans>\n            <ApiAddressForm\n              t={t}\n              defaultValue={ipfsApiAddress}\n              updateAddress={doUpdateIpfsApiAddress} />\n          </Box>\n        </div>\n        <div className='measure lh-copy dn db-l flex-none mid-gray f6' style={{ maxWidth: '40%' }}>\n          <AboutIpfs />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst ConnectionStatus = ({ t, connected, sameOrigin }) => {\n  if (connected) {\n    return (\n      <div>\n        <h1 className='montserrat fw2 navy ma0 f3 green'>{t('connected.header')}</h1>\n        <Trans i18nKey='connected.paragraph1'>\n          <p>Now, it's time for you to explore your node. Head to <a className='link blue' href='#/files/'>Files page</a> to manage and share your files, or explore the <a className='link blue' href='https://www.youtube.com/watch?v=Bqs_LzBjQyk'>Merkle Forest</a> of peer-hosted hash-linked data via <a className='link blue' href='#/explore'>IPLD explorer</a>.</p>\n        </Trans>\n        <Trans i18nKey='connected.paragraph2'>\n          <p>You can always come back to this address to change the IPFS node you're connected to.</p>\n        </Trans>\n      </div>\n    )\n  }\n\n  const defaultDomains = ['http://127.0.0.1:5001', 'https://webui.ipfs.io']\n  const origin = window.location.origin\n  const addOrigin = defaultDomains.indexOf(origin) === -1\n\n  return (\n    <div>\n      <h1 className='montserrat fw2 navy ma0 f3 yellow'>{t('notConnected.header')}</h1>\n      <Trans i18nKey='notConnected.paragraph1'>\n        <p>Failed to connect to the API.</p>\n      </Trans>\n      { !sameOrigin && (\n        <div>\n          <Trans i18nKey='notConnected.paragraph2'>\n            <p>Make sure you <a className='link blue' href='https://github.com/ipfs-shipyard/ipfs-webui#configure-ipfs-api-cors-headers'>configure your IPFS API</a> to allow cross-origin (CORS) requests, running the commands below:</p>\n          </Trans>\n          <Shell>\n            <code className='db'>$ ipfs config --json API.HTTPHeaders.Access-Control-Allow-Origin '[{addOrigin && `\"${origin}\", `}\"{defaultDomains.join('\", \"')}\"]'</code>\n            <code className='db'>$ ipfs config --json API.HTTPHeaders.Access-Control-Allow-Methods '[\"PUT\", \"GET\", \"POST\"]'</code>\n          </Shell>\n        </div>\n      )}\n      <Trans i18nKey='notConnected.paragraph3'>\n        <p>Start an IPFS daemon in a terminal:</p>\n      </Trans>\n      <Shell>\n        <code className='db'>$ ipfs daemon</code>\n        <code className='db'>Initializing daemon...</code>\n        <code className='db'>API server listening on /ip4/127.0.0.1/tcp/5001</code>\n      </Shell>\n      <Trans i18nKey='notConnected.paragraph4'>\n        <p>For more info on how to get started with IPFS you can <a className='link blue' href='https://docs.ipfs.io/introduction/usage/'>read the guide</a>.</p>\n      </Trans>\n    </div>\n  )\n}\n\nclass ApiAddressForm extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = { value: props.defaultValue }\n  }\n\n  onChange = (event) => {\n    const val = event.target.value\n    this.setState({ value: val })\n  }\n\n  onKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      this.onSubmit(event)\n    }\n  }\n\n  onSubmit = async (event) => {\n    event.preventDefault()\n    this.props.updateAddress(this.state.value)\n  }\n\n  render () {\n    const { t } = this.props\n    return (\n      <form onSubmit={this.onSubmit}>\n        <label htmlFor='api-address' className='db f7 mb2 ttu tracked charcoal pl1'>{t('apiAddressForm.apiLabel')}</label>\n        <input id='api-address'\n          type='text'\n          className='w-100 lh-copy monospace f5 pl1 pv1 mb2 charcoal input-reset ba b--black-20 br1 focus-outline'\n          onChange={this.onChange}\n          onKeyPress={this.onKeyPress}\n          value={this.state.value} />\n        <div className='tr'>\n          <Button>{t('apiAddressForm.submitButton')}</Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default connect(\n  'doUpdateIpfsApiAddress',\n  'selectIpfsInitFailed',\n  'selectIpfsConnected',\n  'selectIpfsReady',\n  'selectIpfsApiAddress',\n  'selectApiUrl',\n  withTranslation('welcome')(WelcomePage)\n)\n"],"sourceRoot":""}